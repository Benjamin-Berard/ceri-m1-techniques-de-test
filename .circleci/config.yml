version: 2.1
orbs:
  codecov: codecov/codecov@4.0.1

jobs:
  test-java:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Run tests
          command: mvn clean verify jacoco:report
      - store_test_results:
          path: target/surefire-reports

  codecov-upload:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Run tests
          command: mvn test
      - run:
          name: Upload to Codecov
          command: bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN -s target/site/jacoco.xml -r Benjamin-Berard/ceri-m1-techniques-de-test -v

  checkstyle:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Run Checkstyle
          command: mvn checkstyle:check
      - run:
          name: Generate Checkstyle Report
          command: mvn checkstyle:checkstyle
      - store_artifacts:
          path: target/checkstyle-result.xml
          destination: checkstyle-report


  build:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - run:
          name: Build project
          command: mvn package
  docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: docs/_build
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "benjaminb4@outlook.fr"
            git config user.name "Benjamin-Berard"
      - add_ssh_keys:
          fingerprints:
            - "SHA256:KzUTLEKjx1GwTyqHHAewBQi/WPZdFG/SV+2Ci+8R+Y0"
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/_build/html
  docs-build:
    docker:
      - image: cimg/openjdk:17.0
        user: root
    steps:
      - checkout
      - run:
            name: Install pip
            command: |
              apt-get update && apt-get install -y python3 python3-pip
      - run:
          name: Install dependencies
          command: pip3 install -r requirements.txt
      - run:
          name: Install sphinx
          command: pip3 install sphinx
      - run:
          name: Build docs
          command: cd docs/ && make html
      - persist_to_workspace:

          root: docs/build
          paths: html

workflows:
  version: 2
  build-and-test:
    jobs:
      - test-java
      - checkstyle
      - docs-build
      - docs-deploy
      - build:
          filters:
            branches:
              only: master
      - codecov-upload:
          requires:
            - test-java
